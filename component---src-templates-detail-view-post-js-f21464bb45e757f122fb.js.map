{"version":3,"file":"component---src-templates-detail-view-post-js-f21464bb45e757f122fb.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/CardSlider/CardSlider.js","webpack://gatsby-starter-hello-world/./src/components/News/NewsCard.js","webpack://gatsby-starter-hello-world/./src/components/IframeContainer/IFrameContainer.js","webpack://gatsby-starter-hello-world/./src/templates/DetailViewPost.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './cardSlider.css'\nimport NewsCard from '../News/NewsCard'\n\nconst CardSlider = ({ posts }) => {\n\n  const [currentView, setCurrentView] = useState(0)\n\n  return (\n    <div className='other-news-cards'>\n      <i onClick={() => currentView > 0 && setCurrentView(prev => prev - 1)} className=\"fa fa-arrow-left fa-lg card-slider-arrow\" aria-hidden=\"true\"></i>\n      <NewsCard to={`/news/${posts[currentView]?.slug}`} createdAt={posts[currentView].createdAt} post={posts[currentView]}></NewsCard>\n      {posts.length > 1 && <NewsCard to={`/news/${posts[currentView + 1].slug}`} createdAt={posts[currentView + 1].createdAt} post={posts[currentView + 1]}></NewsCard>}\n      {posts.length > 2 &&<NewsCard to={`/news/${posts[currentView + 2].slug}`} createdAt={posts[currentView + 2].createdAt} post={posts[currentView + 2]}></NewsCard>}\n      <i onClick={() => currentView < posts.length - 3 && setCurrentView(prev => prev + 1)} style={{ justifySelf: 'end' }} className=\"fa fa-arrow-right fa-lg card-slider-arrow\" aria-hidden=\"true\"></i>\n    </div>\n  )\n}\n\nexport default CardSlider","import React from 'react'\nimport H3 from '../Texts/H3'\nimport './news.css'\nimport { Link } from 'gatsby'\nimport H2 from '../Texts/H2'\n\n\nconst NewsCard = ({ post, to, createdAt }) => {\n    return (\n        <Link to={to} key={post.id} className='post-card'>\n            \n            \n            <img alt=\"Author\" className='news-image' style={{ gridArea: 'image' }} src={`${post?.url?.fields?.file?.url || post?.url?.file?.url}?w=300&h=300&fit=fill&f=center`}></img>\n            <H2 className={'post-card-title dark-text'} style={{ gridArea: 'title',padding:'0px 12px' }}>{post.title}</H2>\n            <H3 className={'dark-text'} style={{ gridArea: 'description',padding:'0px 12px' }}>{post?.shortText?.length > 115 ?\n            `${post.shortText.substring(0, 115)}...` : post.shortText}</H3>\n            <div style={{gridArea:'readmore'}} className='right-arrow' >\n            <span>Read more</span>\n            <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n            </div>\n        </Link>\n    )\n}\n\nexport default NewsCard","import React from 'react'\nimport './ifc.css'\n\nexport const IFrameContainer = ({ children }) => {\n    return (\n        <span style={{}} className=\"i-frame-container\">{children}</span>\n    );\n}; \n","import React from 'react'\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\nimport { BLOCKS } from \"@contentful/rich-text-types\";\nimport { INLINES } from \"@contentful/rich-text-types\";\nimport { graphql } from \"gatsby\"\nimport './templates.css'\nimport H2 from '../components/Texts/H2';\nimport CardSlider from '../components/CardSlider/CardSlider';\nimport Card from '../components/Card/Card';\nimport { IFrameContainer } from '../components/IframeContainer/IFrameContainer';\n\n\n\n\n\n\n\n\n\nconst DetailViewPost = ({ data }) => {\n\n  const options = {\n    renderNode: {\n      [BLOCKS.EMBEDDED_ASSET]: (node) => {\n        const asset = data.contentfulNews.contentText.references.find(ref => ref.contentful_id === node.data.target.sys.id)\n        return (\n          <div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", gap: \"8px\" }}>\n            <img style={{ width: '25%', height: 'auto', borderRadius: '12px' }} src={asset.url} alt={asset.fileName}\n            />\n          </div>)\n      },\n      [INLINES.HYPERLINK]: (node) => {\n        if ((node.data.uri).includes(\"youtube.com/embed\")) {\n          return <IFrameContainer><iframe title=\"Unique Title 002\" src={node.data.uri} allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" frameBorder=\"0\" allowFullScreen></iframe></IFrameContainer>\n        } else if ((node.data.uri).includes(\"store.steampowered\")) {\n          const widgetUrl = node.data.uri.replace('app', 'widget')\n          return <iframe title={widgetUrl} src={widgetUrl} frameBorder=\"0\" width=\"100%\" height=\"190\"></iframe>\n        }\n      }\n      // HERE IS CODE TO RENDER LINKS TO OTHER POSTS!\n      // [BLOCKS.EMBEDDED_ENTRY]: (node, children) => {\n      //     const entry = data.contentfulBlogPosts.contentText.references.find(ref => ref.contentful_id === node.data.target.sys.id)\n      //     return (<div\n      //     >{entry.title}</div>)\n      // }\n    }\n  }\n  const sortedAllNews = data.allContentfulNews.nodes.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt))\n\n\n  return (\n\n    <>\n\n      <div className='post-detail-content'>\n        <Card style={{ minHeight: 'auto', marginBottom: '12px', gridArea: 'main' }} title={data.contentfulNews.title}>\n          <div className=\"blog-post-contenxt\" style={{ gridArea: 'text' }}>{documentToReactComponents(JSON.parse(data.contentfulNews.contentText.raw), options)}</div>\n        </Card>\n\n        <div>\n          <H2 style={{ textAlign: 'center', paddingBottom: '24px' }}>Explore the latest news!</H2>\n          <CardSlider posts={sortedAllNews}></CardSlider>\n        </div>\n\n        <div className='post-aside'>\n          <img alt=\"Author\" style={{ borderRadius: '50%', width: '150px' }} src={`${data.contentfulNews.author.profile.url}?w=200&h=200&fit=fill&f=center`}></img>\n          <div style={{ textAlign: 'center', display: 'flex', gap: '12px', flexDirection: 'column' }}><H2>Written by {data.contentfulNews.author.name}</H2><H2>{data.contentfulNews.author.role}</H2></div>\n        </div>\n\n      </div>\n\n\n    </>\n  )\n}\n\nexport const query = graphql`\nquery postDetail($slug:String){\n  contentfulNews(slug:{eq:$slug}) {\n    contentful_id,\n    author{\n      name,\n      role,\n      profile{\n        url\n      }\n    },\n    title,\n    url {\n      file {\n        url\n        fileName\n        contentType\n      }\n    },\n    contentText {\n      raw\n    references {\n      ... on ContentfulAsset {\n        # You'll need to query contentful_id in each reference\n        contentful_id\n        __typename\n        url \n      }\n    }\n    },\n    slug\n  }\n  allContentfulNews{\n    nodes{\n      title,\n      slug,\n      shortText,\n      createdAt,\n      updatedAt,  \n      url{\n        file{\n          url\n        }\n      },\n      author {\n        id,\n        name,\n        role,\n        profile{\n          url\n        }\n        \n      }\n    }\n  }\n}\n  `\n\n\n\n\n\n\nexport default DetailViewPost"],"names":["_ref","_posts$currentView","posts","currentView","setCurrentView","useState","React","className","onClick","prev","NewsCard","to","slug","createdAt","post","length","style","justifySelf","_post$url","_post$url$fields","_post$url$fields$file","_post$url2","_post$url2$file","_post$shortText","Link","key","id","alt","gridArea","src","url","fields","file","H2","padding","title","H3","shortText","substring","IFrameContainer","children","data","options","renderNode","BLOCKS","node","asset","contentfulNews","contentText","references","find","ref","contentful_id","target","sys","display","flexDirection","flexWrap","gap","width","height","borderRadius","fileName","INLINES","uri","includes","allow","frameBorder","allowFullScreen","widgetUrl","replace","sortedAllNews","allContentfulNews","nodes","sort","a","b","Date","updatedAt","Card","minHeight","marginBottom","documentToReactComponents","JSON","parse","raw","textAlign","paddingBottom","CardSlider","author","profile","name","role"],"sourceRoot":""}